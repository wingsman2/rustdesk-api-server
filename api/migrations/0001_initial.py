# Generated by Django 4.2.7 on 2023-12-14 12:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="RustDesDevice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rid",
                    models.CharField(blank=True, max_length=60, verbose_name="Client ID"),
                ),
                ("cpu", models.CharField(max_length=20, verbose_name="CPU")),
                ("hostname", models.CharField(max_length=20, verbose_name="Hostname")),
                ("memory", models.CharField(max_length=20, verbose_name="Memory")),
                ("os", models.CharField(max_length=20, verbose_name="Operating System")),
                ("uuid", models.CharField(max_length=60, verbose_name="uuid")),
                (
                    "username",
                    models.CharField(blank=True, max_length=60, verbose_name="System Username"),
                ),
                ("version", models.CharField(max_length=20, verbose_name="Client Version")),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="Device Registration Time"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="Device Update Time"),
                ),
            ],
            options={
                "verbose_name": "Device",
                "verbose_name_plural": "Device List",
                "ordering": ("-rid",),
            },
        ),
        migrations.CreateModel(
            name="RustDeskPeer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.CharField(max_length=16, verbose_name="User ID")),
                ("rid", models.CharField(max_length=60, verbose_name="Client ID")),
                ("username", models.CharField(max_length=20, verbose_name="System Username")),
                ("hostname", models.CharField(max_length=30, verbose_name="Operating System Name")),
                ("alias", models.CharField(max_length=30, verbose_name="Alias")),
                ("platform", models.CharField(max_length=30, verbose_name="Platform")),
                ("tags", models.CharField(max_length=30, verbose_name="Tags")),
                ("rhash", models.CharField(max_length=60, verbose_name="Device Link Password")),
            ],
            options={
                "verbose_name": "Peers",
                "verbose_name_plural": "Peers List",
                "ordering": ("-username",),
            },
        ),
        migrations.CreateModel(
            name="RustDeskTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.CharField(max_length=16, verbose_name="Owner User ID")),
                ("tag_name", models.CharField(max_length=60, verbose_name="Tag Name")),
                (
                    "tag_color",
                    models.CharField(blank=True, max_length=60, verbose_name="Tag Color"),
                ),
            ],
            options={
                "verbose_name": "Tags",
                "verbose_name_plural": "Tags List",
                "ordering": ("-uid",),
            },
        ),
        migrations.CreateModel(
            name="RustDeskToken",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=20, verbose_name="Username")),
                ("rid", models.CharField(max_length=16, verbose_name="RustDesk ID")),
                ("uid", models.CharField(max_length=16, verbose_name="User ID")),
                ("uuid", models.CharField(max_length=60, verbose_name="uuid")),
                (
                    "access_token",
                    models.CharField(
                        blank=True, max_length=60, verbose_name="access_token"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="Login Time"),
                ),
            ],
            options={
                "verbose_name": "Token",
                "verbose_name_plural": "Token List",
                "ordering": ("-username",),
            },
        ),
        migrations.CreateModel(
            name="ShareLink",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.CharField(max_length=16, verbose_name="User ID")),
                ("shash", models.CharField(max_length=60, verbose_name="Link Key")),
                ("peers", models.CharField(max_length=20, verbose_name="Machine ID List")),
                ("is_used", models.BooleanField(default=False, verbose_name="Used")),
                ("is_expired", models.BooleanField(default=False, verbose_name="Expired")),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="Generation Time"),
                ),
            ],
            options={
                "verbose_name": "Share Link",
                "verbose_name_plural": "Link List",
                "ordering": ("-create_time",),
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(max_length=50, unique=True, verbose_name="Username"),
                ),
                ("rid", models.CharField(max_length=16, verbose_name="RustDesk ID")),
                ("uuid", models.CharField(max_length=60, verbose_name="uuid")),
                (
                    "autoLogin",
                    models.BooleanField(default=True, verbose_name="Auto Login"),
                ),
                ("rtype", models.CharField(max_length=20, verbose_name="Type")),
                ("deviceInfo", models.TextField(blank=True, verbose_name="Login Information:")),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("is_admin", models.BooleanField(default=False, verbose_name="Admin")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "User List",
                "permissions": (
                    ("view_task", "Can see available tasks"),
                    ("change_task_status", "Can change the status of tasks"),
                    ("close_task", "Can remove a task by setting its status as closed"),
                ),
            },
        ),
    ]
